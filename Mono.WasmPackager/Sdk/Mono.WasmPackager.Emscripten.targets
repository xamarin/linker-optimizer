<Project>
  <UsingTask TaskName="Mono.WasmPackager.Emscripten.SourceEnvironment" AssemblyFile="$(_WasmPackager_PackagerAssembly)" />
  <UsingTask TaskName="Mono.WasmPackager.Emscripten.ConstructEmccEnv" AssemblyFile="$(_WasmPackager_PackagerAssembly)" />
  <UsingTask TaskName="Mono.WasmPackager.Emscripten.Emcc" AssemblyFile="$(_WasmPackager_PackagerAssembly)" />

  <PropertyGroup>
    <WasmPackager_Emcc_DependsOn>
    </WasmPackager_Emcc_DependsOn>
    <WasmPackager_LinkEmcc_DependsOn>
      WasmPackager_Emcc;
    </WasmPackager_LinkEmcc_DependsOn>
  </PropertyGroup>

  <!-- private properties -->
  <PropertyGroup>
    <_WasmPackager_EmsdkEnv>$(WasmPackager_BuildDir)/emsdk_env.sh</_WasmPackager_EmsdkEnv>
  </PropertyGroup>

  <Target
      Name="_WasmPackager_Emcc_ConstructEnv"
      DependsOnTargets="$(WasmPackager_Emcc_DependsOn)"
      Outputs="$(_WasmPackager_EmsdkEnv)">
    <Message Importance="High" Text="WasmPackager - generating emsdk env: $(_WasmPackager_EmsdkEnv)" />
    <MakeDir Directories="$(WasmPackager_BuildDir)" />
    <MakeDir Directories="$(WasmPackager_EmsdkCacheDir)" />

    <ConstructEmccEnv
          SdkDir="$(WasmPackager_Emscripten_SdkDir)"
          EmsdkEnv="$(_WasmPackager_EmsdkEnv)"
          ConfigFile="$(WasmPackager_EmsdkConfigFile)" />

    <!-- The first time you invoke emcc, it will do some sanity checks and then exit. -->
    <Emcc SdkDir="$(WasmPackager_Emscripten_SdkDir)"
          EmsdkEnv="$(_WasmPackager_EmsdkEnv)"
          CacheDir="$(WasmPackager_EmsdkCacheDir)"
          Flags="--help" Quiet='true' />

    <Message Importance="High" Text="_WasmPackager_Emcc_ConstructEnv: $(_WasmPackager_EnableAot)" />
    <Message Importance="Normal" Text="  WasmPackager_Emcc_Sources: %(WasmPackager_Emcc_Sources.Identity) - %(Emcc_Input) - %(Emcc_Output)" />
  </Target>

  <Target
      Name="WasmPackager_Emcc"
      DependsOnTargets="$(WasmPackager_Emcc_DependsOn);_WasmPackager_Emcc_ConstructEnv"
      Inputs="%(WasmPackager_Emcc_Sources.Emcc_Input);%(WasmPackager_Emcc_Sources.Emcc_Deps);$(_WasmPackager_EmsdkEnv)"
      Outputs="%(WasmPackager_Emcc_Sources.Emcc_Output)">

    <Emcc SdkDir="$(WasmPackager_Emscripten_SdkDir)"
          EmsdkEnv="$(_WasmPackager_EmsdkEnv)"
          CacheDir="$(WasmPackager_EmsdkCacheDir)"
          Input="%(WasmPackager_Emcc_Sources.Emcc_Input)"
          Output="%(WasmPackager_Emcc_Sources.Emcc_Output)"
          Flags="-c %(WasmPackager_Emcc_Sources.Emcc_Flags) $(WasmPackager_Emcc_Flags)" />
  </Target>

  <Target Name="WasmPackager_LinkEmcc"
    DependsOnTargets="$(WasmPackager_LinkEmcc_DependsOn);_WasmPackager_Emcc_ConstructEnv"
    Inputs="@(WasmPackager_Emcc_Sources->'%(Emcc_Output)')"
    Outputs="$(WasmPackager_Emcc_Output)">

    <ItemGroup>
      <__WasmPackager_LinkEmcc_Inputs Include="%(WasmPackager_Emcc_Sources.Emcc_Output)" />
      <__WasmPackager_LinkEmcc_Inputs Include="@(WasmPackager_Emcc_Libraries)" />
    </ItemGroup>

    <Message Importance="High" Text="LINK EMCC: @(__WasmPackager_LinkEmcc_Inputs)" />

    <Emcc SdkDir="$(WasmPackager_Emscripten_SdkDir)"
          EmsdkEnv="$(_WasmPackager_EmsdkEnv)"
          CacheDir="$(WasmPackager_EmsdkCacheDir)"
          ConfigFile="$(WasmPackager_EmsdkConfigFile)"
          Input="@(__WasmPackager_LinkEmcc_Inputs, ' ') @(WasmPackager_Emcc_JsLibraries->'--js-library %(Identity)', ' ')"
          Output="$(WasmPackager_Emcc_Output)"
          Flags="$(WasmPackager_Emcc_Flags) $(WasmPackager_Emcc_Link_Flags)" />
  </Target>

</Project>
