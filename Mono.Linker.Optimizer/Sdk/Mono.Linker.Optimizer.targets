<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <LinkerOptimizerConfigurationDependsOn>
      $(LinkerOptimizerConfigurationDependsOn);
    </LinkerOptimizerConfigurationDependsOn>
    <LinkerOptimizerDependsOn>
      $(LinkerOptimizerDependsOn);
      _LinkerOptimizer_ComputeDependencies;
    </LinkerOptimizerDependsOn>
  </PropertyGroup>

  <!--
    Required input parameters:
      $(LinkerOptimizerInputPath)
      $(LinkerOptimizerOutputPath)
      @(LinkerOptimizerInputAssembly)
      @(LinkerOptimizerDependencyInput)
      $(LinkerOptimizerEnabled)

    Optional input parameters:
      $(LinkerOptimizerOptions)
      $(LinkerOptimizerReport)
      @(LinkerOptimizerXmlDescriptors)
      @(LinkerOptimizerLinkerDescriptors)

      $(LinkerOptimizerExtraLinkerArguments)
      @(LinkerOptimizerBaseClassLibraryPath)
      $(LinkerOptimizerResultFilePath)
  -->

  <Target
      Name="_LinkerOptimizer_PrepareConfiguration"
      DependsOnTargets="$(LinkerOptimizerConfigurationDependsOn)">

    <!--
      These two properties are used as inputs in _LinkerOptimizer_ComputeDependencies.
      We compute them inside a target because the $(LinkerOptimizerInputPath) and
      $(LinkerOptimizerInputPath) could possibly be set by another target
      (like for instance _LinkerOptimizerBlazor_PrepareConfiguration).
      -->
    <PropertyGroup>
      <_LinkerOptimizer_DependencyCache>$(LinkerOptimizerInputPath)/linker-optimizer.cache</_LinkerOptimizer_DependencyCache>
      <_LinkerOptimizer_ResponseFile>$(LinkerOptimizerInputPath)/linker-optimizer.response</_LinkerOptimizer_ResponseFile>
    </PropertyGroup>

    <PropertyGroup Condition="'$(LinkerOptimizerResultFilePath)' != ''">
      <_LinkerOptimizer_ResultsFile>$(LinkerOptimizerResultFilePath)</_LinkerOptimizer_ResultsFile>
    </PropertyGroup>
    <PropertyGroup Condition="'$(LinkerOptimizerResultFilePath)' == ''">
      <_LinkerOptimizer_ResultsFile>$(LinkerOptimizerInputPath)/linker-optimizer.results</_LinkerOptimizer_ResultsFile>
    </PropertyGroup>

    <Message Text="Dependency Cache: $(_LinkerOptimizer_DependencyCache)" />
    <Message Text="Response File: $(_LinkerOptimizer_ResponseFile)" />

    <Error Text="'LinkerOptimizerInputAssembly' contains more than one item: @(LinkerOptimizerInputAssembly)" Condition="'@(LinkerOptimizerInputAssembly->Count())' &gt; 1" />
  </Target>

  <Target
      Name="_LinkerOptimizer_ComputeDependencies"
      DependsOnTargets="_LinkerOptimizer_PrepareConfiguration"
      Inputs="@(LinkerOptimizerXmlDescriptors);
              @(LinkerOptimizerLinkerDescriptors);
              @(LinkerOptimizerInputAssembly);
              @(LinkerOptimizerDependencyInput);"
      Outputs="$(_LinkerOptimizer_DependencyCache);$(_LinkerOptimizer_ResponseFile)">

    <Message Text="Linker Optimizer is disabled." Condition="'$(LinkerOptimizerEnabled)' == 'false'"/>

    <Message Text="Using Linker Optimizer XML: %(LinkerOptimizerXmlDescriptors.Identity)" Condition="'$(LinkerOptimizerEnabled)' != 'false'"/>
    <Message Text="Using Linker Optimizer Arguments: $(LinkerOptimizerOptions)"  Condition="'$(LinkerOptimizerOptions)' != '' and '$(LinkerOptimizerEnabled)' != 'false'" />
    <Message Text="Using Linker Optimizer Report: $(LinkerOptimizerReport)"  Condition="'$(LinkerOptimizerReport)' != '' and '$(LinkerOptimizerEnabled)' != 'false'" />

    <ItemGroup>
      <__LinkerOptimizer_Inputs Include="@(LinkerOptimizerInputAssembly)" />
      <__LinkerOptimizer_Inputs Include="@(LinkerOptimizerDependencyInput)" />
      <__LinkerOptimizer_Distinct_Inputs Include="@(__LinkerOptimizer_Inputs->Distinct ())" />
    </ItemGroup>

    <ItemGroup Condition="'$(LinkerOptimizerEnabled)' != 'false'">
      <__LinkerOptimizer_Arguments Include="@(LinkerOptimizerXmlDescriptors->'--optimizer-xml &quot;%(FullPath)&quot;')" Condition="'@(LinkerOptimizerXmlDescriptors)' != ''" />
      <__LinkerOptimizer_Arguments Include="@(__LinkerOptimizer_Distinct_Inputs->'--optimizer-ref &quot;%(FullPath)&quot;')" />
      <__LinkerOptimizer_Arguments Condition="'$(LinkerOptimizerOptions)' != ''" Include="--optimizer-options $(LinkerOptimizerOptions)" />
      <__LinkerOptimizer_Arguments Condition="'$(LinkerOptimizerReport)' != ''" Include="--optimizer-report $(LinkerOptimizerReport)" />
    </ItemGroup>

    <ItemGroup Condition="'$(LinkerOptimizerEnabled)' == 'false'">
      <__LinkerOptimizer_LinkerArguments Include="@(__LinkerOptimizer_Distinct_Inputs->'-a &quot;%(FullPath)&quot;')" />
    </ItemGroup>

    <ItemGroup>
      <__LinkerOptimizer_LinkerArguments Include="$(LinkerOptimizerExtraLinkerArguments)" />
      <__LinkerOptimizer_LinkerArguments Include="@(LinkerOptimizerBaseClassLibraryPath->'-d &quot;%(Identity)&quot;')" />
      <__LinkerOptimizer_LinkerArguments Include="@(LinkerOptimizerLinkerDescriptors->'-x &quot;%(FullPath)&quot;')" />
      <__LinkerOptimizer_LinkerArguments Include="-o &quot;$(LinkerOptimizerOutputPath)&quot;" />
      <__LinkerOptimizer_LinkerArguments Condition="'$(WasmPackager_EnableDebug)' == 'true'" Include="-b true" />
    </ItemGroup>

    <PropertyGroup Condition="'$(LinkerOptimizerEnabled)' != 'false'">
      <_LinkerOptimizer_Path>$(MSBuildThisFileDirectory)\..\tools\Mono.Linker.Optimizer.dll</_LinkerOptimizer_Path>
    </PropertyGroup>

    <PropertyGroup Condition="'$(LinkerOptimizerEnabled)' == 'false'">
      <_LinkerOptimizer_Path>$(WasmPackager_MonoLinkerPath)</_LinkerOptimizer_Path>
    </PropertyGroup>

    <ItemGroup>
      <_LinkerOptimizer_CommandLine Condition="'$(LinkerOptimizerEnabled)' != 'false'" Include="--optimizer;%(LinkerOptimizerInputAssembly.FullPath);@(__LinkerOptimizer_Arguments);--;" />
      <_LinkerOptimizer_CommandLine Include="$(LinkerOptimizerExtraLinkerArguments);@(__LinkerOptimizer_LinkerArguments);" />
    </ItemGroup>

    <Message Text="Linker Optimizer command line: %(_LinkerOptimizer_CommandLine.Identity) " />

    <ItemGroup>
      <__LinkerOptimizer_Config Include="'$(LinkerOptimizerOutputPath)';'$(LinkerOptimizerEnabled)'" />
      <__LinkerOptimizer_Config Include="'$(LinkerOptimizerOptions)';'$(LinkerOptimizerReport)';B;@(LinkerOptimizerBaseClassLibraryPath)" />
      <__LinkerOptimizer_Config Include="X;@(LinkerOptimizerXmlDescriptors);D;@(LinkerOptimizerLinkerDescriptors)" />
      <__LinkerOptimizer_Config Include="A;@(__LinkerOptimizer_LinkerArguments);L;@(__LinkerOptimizer_LinkerArguments) "/>
      <__LinkerOptimizer_Config Include="I;@(LinkerOptimizerInputAssembly);E;@(LinkerOptimizerDependencyInput) "/>
    </ItemGroup>

    <Hash ItemsToHash="@(__LinkerOptimizer_Config)">
      <Output TaskParameter="HashResult" PropertyName="_LinkerOptimizer_ConfigHash" />
    </Hash>

    <WriteLinesToFile
      Lines="$(_LinkerOptimizer_ConfigHash)"
      File="$(_LinkerOptimizer_DependencyCache)"
      Overwrite="True"
      WriteOnlyWhenDifferent="True" />

    <WriteLinesToFile
      Lines="@(_LinkerOptimizer_CommandLine)"
      File="$(_LinkerOptimizer_ResponseFile)"
      Overwrite="True"
      WriteOnlyWhenDifferent="True" />

    <Message Text="Linker Optimizer config cache: $(_LinkerOptimizer_ConfigHash) $(_LinkerOptimizer_DependencyCache)" />
    <Message Text="Linker Optimizer response file: $(_LinkerOptimizer_ResponseFile)" />
  </Target>

  <Target
      Name="_LinkerOptimizer_LinkApplication"
      DependsOnTargets="$(LinkerOptimizerDependsOn)"
      Inputs="@(LinkerOptimizerXmlDescriptors);
              @(LinkerOptimizerLinkerDescriptors);
              @(LinkerOptimizerInputAssembly);
              @(LinkerOptimizerDependencyInput);
              $(_LinkerOptimizer_DependencyCache);
              $(_LinkerOptimizer_ResponseFile)"
      Outputs="$(_LinkerOptimizer_ResultsFile)">

    <Message Importance="High" Text="Linker Optimizer - linking application" />
    <Message Importance="Normal" Text="  input directory: $(LinkerOptimizerInputPath)" />
    <Message Importance="Normal" Text="  output directory: $(LinkerOptimizerOutputPath)" />
    <Message Importance="Normal" Text="  response file: $(_LinkerOptimizer_ResponseFile)" />

    <Delete Files="$(LinkerOptimizerOutputPath)*.dll" />

    <Exec Command="dotnet &quot;$(_LinkerOptimizer_Path)&quot; @$(_LinkerOptimizer_ResponseFile)" />

    <ItemGroup>
      <_LinkerOptimizer_Output Include="$(LinkerOptimizerOutputPath)*.dll" />
      <_LinkerOptimizer_Output Include="$(LinkerOptimizerOutputPath)*.pdb" />
    </ItemGroup>

    <WriteLinesToFile
      File="$(_LinkerOptimizer_ResultsFile)"
      Lines="@(_LinkerOptimizer_Output)"
      Overwrite="true" />

    <ItemGroup>
      <FileWrites Include="$(_LinkerOptimizer_ResultsFile)" />
      <FileWrites Include="@(_LinkerOptimizer_Output)" />
    </ItemGroup>

    <Message Importance="High" Text="Linker Optimizer - copying extra dependencies" Condition="'@(LinkerOptimizerExtraDependencies)' != ''" />

    <Copy
        SourceFiles="@(LinkerOptimizerExtraDependencies)"
        DestinationFolder="$(LinkerOptimizerOutputPath)"
        SkipUnchangedFiles="true" />

    <Message Importance="High" Text="Linker Optimizer - done linking application" />
    <Message Importance="Normal" Text="  results file: $(_LinkerOptimizer_ResultsFile)" />
  </Target>

</Project>
